#pragma checksum "E:\Angular_Projects\_coreUSerCopy\UserLive\Views\NewUser\InsertMaster.cshtml" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "0b8ad77ec45724091339cd86aa879c7afb33f5f7"
// <auto-generated/>
#pragma warning disable 1591
[assembly: global::Microsoft.AspNetCore.Razor.Hosting.RazorCompiledItemAttribute(typeof(AspNetCore.Views_NewUser_InsertMaster), @"mvc.1.0.view", @"/Views/NewUser/InsertMaster.cshtml")]
[assembly:global::Microsoft.AspNetCore.Mvc.Razor.Compilation.RazorViewAttribute(@"/Views/NewUser/InsertMaster.cshtml", typeof(AspNetCore.Views_NewUser_InsertMaster))]
namespace AspNetCore
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Mvc;
    using Microsoft.AspNetCore.Mvc.Rendering;
    using Microsoft.AspNetCore.Mvc.ViewFeatures;
#line 1 "E:\Angular_Projects\_coreUSerCopy\UserLive\Views\_ViewImports.cshtml"
using UserLive;

#line default
#line hidden
#line 2 "E:\Angular_Projects\_coreUSerCopy\UserLive\Views\_ViewImports.cshtml"
using UserLive.Models;

#line default
#line hidden
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"0b8ad77ec45724091339cd86aa879c7afb33f5f7", @"/Views/NewUser/InsertMaster.cshtml")]
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"fc3a3262aaca43f72383e090e6438ed720a4e2bd", @"/Views/_ViewImports.cshtml")]
    public class Views_NewUser_InsertMaster : global::Microsoft.AspNetCore.Mvc.Razor.RazorPage<UserLive.Models.NewUserVM>
    {
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_0 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("src", new global::Microsoft.AspNetCore.Html.HtmlString("~/images/img/programmer.gif"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_1 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("id", new global::Microsoft.AspNetCore.Html.HtmlString("blahImg"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_2 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("name", new global::Microsoft.AspNetCore.Html.HtmlString("ImagePath"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_3 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("id", new global::Microsoft.AspNetCore.Html.HtmlString("formData"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_4 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("enctype", new global::Microsoft.AspNetCore.Html.HtmlString("multipart/form-data"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_5 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("id", new global::Microsoft.AspNetCore.Html.HtmlString("_formData"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        #line hidden
        #pragma warning disable 0169
        private string __tagHelperStringValueBuffer;
        #pragma warning restore 0169
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperExecutionContext __tagHelperExecutionContext;
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner __tagHelperRunner = new global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner();
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager __backed__tagHelperScopeManager = null;
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager __tagHelperScopeManager
        {
            get
            {
                if (__backed__tagHelperScopeManager == null)
                {
                    __backed__tagHelperScopeManager = new global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager(StartTagHelperWritingScope, EndTagHelperWritingScope);
                }
                return __backed__tagHelperScopeManager;
            }
        }
        private global::Microsoft.AspNetCore.Mvc.TagHelpers.FormTagHelper __Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper;
        private global::Microsoft.AspNetCore.Mvc.TagHelpers.RenderAtEndOfFormTagHelper __Microsoft_AspNetCore_Mvc_TagHelpers_RenderAtEndOfFormTagHelper;
        private global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper;
        #pragma warning disable 1998
        public async override global::System.Threading.Tasks.Task ExecuteAsync()
        {
#line 2 "E:\Angular_Projects\_coreUSerCopy\UserLive\Views\NewUser\InsertMaster.cshtml"
  
    ViewData["Title"] = "InsertMaster";
    Layout = "~/Views/Shared/_Layout.cshtml";

#line default
#line hidden
            BeginContext(129, 2667, true);
            WriteLiteral(@"<style>
    .btn-success {
        display: block;
    }

    #checkboxeslist, #checkboxeslistEdit {
        display: flex;
        /*justify-content:center;*/
        justify-content: space-between;
    }

    .lds-spinner {
        color: official;
        display: inline-block;
        position: relative;
        width: 80px;
        height: 80px;
        left:50%;
        right:50%;
    }

        .lds-spinner div {
            transform-origin: 40px 40px;
            animation: lds-spinner 1.2s linear infinite;
        }

            .lds-spinner div:after {
                content: "" "";
                display: block;
                position: absolute;
                top: 3px;
                left: 37px;
                width: 6px;
                height: 18px;
                border-radius: 20%;
                background: #000000;
            }

            .lds-spinner div:nth-child(1) {
                transform: rotate(0deg);
                animation-delay");
            WriteLiteral(@": -1.1s;
            }

            .lds-spinner div:nth-child(2) {
                transform: rotate(30deg);
                animation-delay: -1s;
            }

            .lds-spinner div:nth-child(3) {
                transform: rotate(60deg);
                animation-delay: -0.9s;
            }

            .lds-spinner div:nth-child(4) {
                transform: rotate(90deg);
                animation-delay: -0.8s;
            }

            .lds-spinner div:nth-child(5) {
                transform: rotate(120deg);
                animation-delay: -0.7s;
            }

            .lds-spinner div:nth-child(6) {
                transform: rotate(150deg);
                animation-delay: -0.6s;
            }

            .lds-spinner div:nth-child(7) {
                transform: rotate(180deg);
                animation-delay: -0.5s;
            }

            .lds-spinner div:nth-child(8) {
                transform: rotate(210deg);
                animation-delay");
            WriteLiteral(@": -0.4s;
            }

            .lds-spinner div:nth-child(9) {
                transform: rotate(240deg);
                animation-delay: -0.3s;
            }

            .lds-spinner div:nth-child(10) {
                transform: rotate(270deg);
                animation-delay: -0.2s;
            }

            .lds-spinner div:nth-child(11) {
                transform: rotate(300deg);
                animation-delay: -0.1s;
            }

            .lds-spinner div:nth-child(12) {
                transform: rotate(330deg);
                animation-delay: 0s;
            }

    ");
            EndContext();
            BeginContext(2797, 423, true);
            WriteLiteral(@"@keyframes lds-spinner {
        0% {
            opacity: 1;
        }

        100% {
            opacity: 0;
        }
    }

    .load_master {
        border: 16px solid #f3f3f3; /*Light gre*/
        border-top: 16px solid #3498db; /*Blue*/
        border-radius: 50%;
        width: 120px;
        height: 120px;
        animation: spin 2s linear infinite;
        text-align: center;
    }

    ");
            EndContext();
            BeginContext(3221, 399, true);
            WriteLiteral(@"@keyframes spin {
        0% {
            transform: rotate(0deg)
        }

        100% {
            transform: rotate(360deg);
        }
    }
</style>
<h2>Insert Master</h2>
<hr />

<div class=""container"">
    <div id=""_ip"" class=""text-center""></div>
    <div class=""row"">
        <div class=""col-lg-5"">
            <h1 class=""alert alert-info"">Insert Users</h1>
            ");
            EndContext();
            BeginContext(3620, 4128, false);
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("form", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "9a33bb8b449a4a34839ffd3e021151ea", async() => {
                BeginContext(3670, 2250, true);
                WriteLiteral(@"
                <div class=""col-md-3"">
                    <div class=""form-group"">
                        <label class=""control-label"">UserName</label>
                        <input type=""text"" id=""uname"" name=""_userName"" class=""form-control"" />
                    </div>
                </div>
                <div class=""col-md-3"">
                    <div class=""form-group"">
                        <label class=""control-label"">Email</label>
                        <input type=""email"" id=""email"" name=""_userEmail"" class=""form-control"" />
                    </div>
                </div>
                <div class=""col-md-3"">
                    <div class=""form-group"">
                        <label class=""control-label"">Password</label>
                        <input type=""password"" id=""pwd"" name=""_userPwd"" class=""form-control"" />
                    </div>
                </div>
                <div class=""col-md-3"">
                    <div class=""form-group"">
                     ");
                WriteLiteral(@"   <label class=""control-label"">Phone</label>
                        <input type=""text"" id=""phone"" name=""_userPhone"" class=""form-control"" />
                    </div>
                </div>
                <div class=""col-md-12"">
                    <div class=""form-group"">
                        <label class=""control-label"">Country</label>
                        <select class=""form-control classCountryList"" id=""countryList"" name=""countryList"">
                        </select>
                    </div>
                </div>

                <div class=""col-md-12"">
                    <div class=""form-group"">
                        <label class=""control-label"">Province</label>
                        <select class=""form-control classProvinceList"" id=""provinceList"" name=""provinceList"">
                        </select>
                    </div>
                </div>
                <div class=""col-md-12"">
                    <div class=""form-group"">
                        <label ");
                WriteLiteral("class=\"control-label\">DOB</label>\r\n                        <input type=\"date\" id=\"dob\" name=\"_dob\" class=\"form-control\" placeholder=\"Enter DOB\" />\r\n                    </div>\r\n                </div>\r\n\r\n");
                EndContext();
                BeginContext(5947, 226, true);
                WriteLiteral("                <div class=\"col-md-12\">\r\n                    <div class=\"user_profile_img\">\r\n\r\n                        <input name=\"_cover\" type=\"file\" class=\"hidden\" id=\"InputImg\" accept=\"image/*\" />\r\n                        ");
                EndContext();
                BeginContext(6173, 69, false);
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("img", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagOnly, "defaabfd48434c29a3a591621073621c", async() => {
                }
                );
                __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_0);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_1);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_2);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                EndContext();
                BeginContext(6242, 2, true);
                WriteLiteral("\r\n");
                EndContext();
                BeginContext(6307, 379, true);
                WriteLiteral(@"                    </div>
                </div>

                <!--<div class=""col-md-6"">
        <div class=""form-group"">
            <label class=""control-label"">Upload File</label>
            <input type=""file"" id=""file"" name=""myfile""><br>
            <input type=""submit"" id=""btnFileUpload"" class=""btn btn-success btn-xs"" value=""Upload File"">
        </div>-->
");
                EndContext();
                BeginContext(6722, 2, true);
                WriteLiteral("\r\n");
                EndContext();
                BeginContext(6926, 33, true);
                WriteLiteral("\r\n                <!--</div>-->\r\n");
                EndContext();
                BeginContext(7203, 538, true);
                WriteLiteral(@"
                <div class=""col-md-12"">
                    <div class=""form-group"">
                        <label class=""control-label"">
                            Skills
                        </label>
                        <div class="""" id=""checkboxeslist"">
                        </div>
                    </div>

                </div>
                <div class=""form-group"">
                    <input type=""button"" id=""btnSubmitt"" class=""btn btn-primary"" value=""Create"" />
                </div>
            ");
                EndContext();
            }
            );
            __Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.FormTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper);
            __Microsoft_AspNetCore_Mvc_TagHelpers_RenderAtEndOfFormTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.RenderAtEndOfFormTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_RenderAtEndOfFormTagHelper);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_3);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_4);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            EndContext();
            BeginContext(7748, 190, true);
            WriteLiteral("\r\n\r\n\r\n\r\n\r\n            <div class=\"row hidden\" id=\"table_hover\">\r\n                <table class=\"table table-hover table-striped \">\r\n                    <thead>\r\n                        <tr>\r\n");
            EndContext();
            BeginContext(7983, 439, true);
            WriteLiteral(@"                            <th>UserName</th>
                            <th>Email</th>
                            <th>Password</th>
                            <th>Phone</th>
                            <th>Country</th>
                            <th>Province</th>

                        </tr>
                    </thead>
                    <tbody class=""tbody"">
                    </tbody>
                </table>

");
            EndContext();
#line 257 "E:\Angular_Projects\_coreUSerCopy\UserLive\Views\NewUser\InsertMaster.cshtml"
                 using (Html.BeginForm("InsertMasterData", "NewUser", FormMethod.Post, new { defaultbutton = "SubmitButton", onsubmit = "addInfo()", enctype = "multipart/form-data", role = "form", id = "myForm" }))
                {
                    

#line default
#line hidden
            BeginContext(8678, 52, false);
#line 259 "E:\Angular_Projects\_coreUSerCopy\UserLive\Views\NewUser\InsertMaster.cshtml"
               Write(Html.HiddenFor(x => x.dataList, new { id = "data" }));

#line default
#line hidden
            EndContext();
            BeginContext(8732, 176, true);
            WriteLiteral("                    <div class=\"form-group\">\r\n                        <input type=\"submit\" id=\"btnInsert\" class=\"btn btn-success \" value=\"Save\" />\r\n                    </div>\r\n");
            EndContext();
#line 263 "E:\Angular_Projects\_coreUSerCopy\UserLive\Views\NewUser\InsertMaster.cshtml"
                }

#line default
#line hidden
            BeginContext(8927, 397, true);
            WriteLiteral(@"            </div>
        </div>


        <!--*********************************************************show user list***************************************************************-->

        <div class=""col-lg-7"">
            <h1 class=""alert alert-info"">Users List</h1>

            <table class=""table table-hover table-striped"">
                <thead>
                    <tr>
");
            EndContext();
            BeginContext(9365, 973, true);
            WriteLiteral(@"                        <th>UserName</th>
                        <th>Email</th>
                        <th>Password</th>
                        <th>Phone</th>
                        <th>Country</th>
                        <th>Province</th>
                        <th>Actions</th>
                    </tr>
                </thead>
                <tbody id=""tMasterbody"">
                </tbody>
            </table>
            <div class=""lds-spinner""><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div></div>

        </div>
    </div>



    <!--*********************************************************POP UP MODEL***************************************************************-->
    <!-- Modal -->
    <div class=""modal fade"" id=""myModal"" role=""dialog"">
        <div class=""modal-dialog modal-lg"">
            <div class=""modal-content"">
                ");
            EndContext();
            BeginContext(10338, 3395, false);
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("form", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "b52c15e38bba46748780f7a0f9236d11", async() => {
                BeginContext(10389, 385, true);
                WriteLiteral(@"
                    <div class=""modal-header"">
                        <button type=""button"" class=""close"" data-dismiss=""modal"">&times;</button>
                        <h4 class=""modal-title"">User Detail</h4>
                    </div>
                    <div class=""modal-body"">
                        <div class=""row"">
                            <div class=""col-md-12"">
");
                EndContext();
                BeginContext(10872, 1822, true);
                WriteLiteral(@"
                                <div class=""form-group"">
                                    <label class=""control-label"">UserId</label>
                                    <input type=""text"" id=""_userId"" disabled class=""form-control"" />
                                </div>

                                <div class=""form-group"">
                                    <label class=""control-label"">UserName</label>
                                    <input type=""text"" id=""_uname"" name=""user_name"" class=""form-control"" />
                                </div>

                                <div class=""form-group"">
                                    <label class=""control-label"">Email</label>
                                    <input type=""email"" id=""_email"" disabled name=""user_email"" class=""form-control"" />
                                </div>

                                <div class=""form-group"">
                                    <label class=""control-label"">Password</label>
      ");
                WriteLiteral(@"                              <input type=""password"" id=""_pwd"" name=""user_pwd"" class=""form-control"" />
                                </div>

                                <div class=""form-group"">
                                    <label class=""control-label"">Phone</label>
                                    <input type=""text"" id=""_phone"" name=""user_phone"" class=""form-control"" />
                                </div>

                                <div class=""form-group"">
                                    <label class=""control-label"">Country</label>
                                    <select class=""form-control classCountryList"" id=""countryListEdit"" name=""_countryListEdit"">
                                    </select>

                                </div>


");
                EndContext();
                BeginContext(13047, 679, true);
                WriteLiteral(@"
                                <div class=""form-group"">
                                    <label class=""control-label"">
                                        Skills
                                    </label>
                                    <div class="""" id=""checkboxeslistEdit"">
                                    </div>
                                </div>
                            </div>

                        </div>



                    </div>
                    <div class=""modal-footer"">
                        <button type=""button"" class=""btn btn-success"" id=""btnUpdate"">Update</button>
                    </div>
                ");
                EndContext();
            }
            );
            __Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.FormTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper);
            __Microsoft_AspNetCore_Mvc_TagHelpers_RenderAtEndOfFormTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.RenderAtEndOfFormTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_RenderAtEndOfFormTagHelper);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_5);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_4);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            EndContext();
            BeginContext(13733, 16781, true);
            WriteLiteral(@"
            </div>
        </div>
    </div>
</div>

<script src=""https://code.jquery.com/jquery-3.5.1.min.js""></script>
<script src=""https://unpkg.com/sweetalert/dist/sweetalert.min.js""></script>
<script>
    $(document).ready(function () {

        loadMasterData();
        CountryDropDown();
        SkillsList();

    });

    function GetImage() {
        $(""#blahImg"").click(function () {
            $(""#InputImg"").trigger('click')
        })
    }
    function GetImagePath() {
        $(""#InputImg"").change(function () {
            if (this.files && this.files[0]) {
                var reader = new FileReader();

                reader.onload = function (e) {
                    $('#blahImg').attr('src', e.target.result)
                    console.log(""src=> "", e.target.result)
                }

                reader.readAsDataURL(this.files[0]);
                //console.log(""reader=> "", reader)
            }
        })
    }
    //$(""#btnFileUpload"").click(funct");
            WriteLiteral(@"ion (e) {
    //          var bar = $('.bar');
    //    var percent = $('.percent');
    //    var status = $('#status');
    //    e.preventDefault()
    //    var fd = new FormData();
    //    var files = $('#file').get(0).files;
    //    var upFile = fd.append('file', files[0]);
    //    $.ajax({
    //        beforeSend: function () {
    //            status.empty();
    //            var percentVal = '0%';
    //            bar.width(percentVal);
    //            percent.html(percentVal);
    //        },
    //        uploadProgress: function (event, position, total, percentComplete) {
    //            var percentVal = percentComplete + '%';
    //            bar.width(percentVal);
    //            percent.html(percentVal);
    //        },
    //        complete: function (xhr) {
    //            status.html(xhr.responseText);
    //        }
    //    });
    //    //$.ajax({
    //    //    xhr: function () {
    //    //        var xhr = new window.XMLHttpRequest()");
            WriteLiteral(@";
    //    //        xhr.upload.addEventListener('progress', function (e) {
    //    //            if (e.lengthComputable) {
    //    //                console.log(""bytes loaded=> "", e.loaded)
    //    //                console.log('total size=> ', e.total)
    //    //                console.log('%age uploaded=> ', (e.loaded / e.total))
    //    //                var perc = Math.round((e.loaded / e.total))

    //    //                $("".progress-bar"").attr('aria-valuenow', perc).css('width', perc).text(perc + ""%"")
    //    //            }
    //    //        })
    //    //    },
    //    //    type:'post',
    //    //    url: '/upload',
    //    //    data: files,
    //    //    success: function () {
    //    //        alert('done')
    //    //    }



















    //    //console.log(""id=> "", $(""#file""))
    //    //var files = $('#file').get(0).files;
    //    //var upFile = fd.append('file', files[0]);
    //    //console.log(""upFile=> "", upF");
            WriteLiteral(@"ile);
    //    //console.log(""Files=> "", files);




    //    //var bar = $('.bar');
    //    //var percent = $('.percent');
    //    //var status = $('#status');

    //    //$('#formData').aja({
    //    //    beforeSend: function () {
    //    //        status.empty();
    //    //        var percentVal = '0%';
    //    //        bar.width(percentVal);
    //    //        percent.html(percentVal);
    //    //    },
    //    //    uploadProgress: function (event, position, total, percentComplete) {
    //    //        var percentVal = percentComplete + '%';
    //    //        bar.width(percentVal);
    //    //        percent.html(percentVal);
    //    //    },
    //    //    complete: function (xhr) {
    //    //        status.html(xhr.responseText);
    //    //    }
    //    //});
    //})

    function GetProvinceList(userDropDownVal) {
        $.ajax({
            url: ""/Country/GetProvinceLists"",
            type: ""GET"",
            contentType: ""applicati");
            WriteLiteral(@"on/json;charset=utf-8"",
            dataType: ""json"",
            success: function (result) {
                //console.log(""Province Dropdown=> "", result)

                var dropdown = '<option value=""-1"">Please Select Province</option>';
                var updated_dropdown = new Array();


                //for filter the array values on the basis of FK
                updated_dropdown = $.map(result, function (val, key) {
                    //console.log(""In Map (result)=> "", result)
                    if (val.countryId == userDropDownVal) {
                        return val;
                    }
                    //console.log(""val=> "", val)
                })


                for (var i = 0; i < updated_dropdown.length; i++) {
                    dropdown += '<option value=""' + updated_dropdown[i].provinceId + '"">' + updated_dropdown[i].provinceName + '</option>';
                }
                $(""#provinceList,#proListEdit"").html(dropdown)
                console.log");
            WriteLiteral(@"(""ProvinceListVal(Country)=> "", userDropDownVal)
                console.log(""updated_dropdown(Province)=> "", updated_dropdown)

            },
            error: function (errormessage) {
                alert(errormessage.responseText);
            }
        });
    }
    function CountryDropDown() {
        $.ajax({
            url: ""/Country/GetCountryLists"",
            type: ""GET"",
            contentType: ""application/json;charset=utf-8"",
            dataType: ""json"",
            success: function (result) {
                //console.log(""CountryDropDown=> "", result)

                var dropdown = '<option value=""-1"">Please Select Country</option>';
                for (var i = 0; i < result.length; i++) {
                    dropdown += '<option value=""' + result[i].countryId + '"">' + result[i].countryName + '</option>';
                }
                $(""#countryList,#countryListEdit"").html(dropdown)
                $(""#countryList,#countryListEdit"").change(function () {

");
            WriteLiteral(@"                    var userDropDownText = $(""#countryList,#countryListEdit option:selected"").text();
                    var userDropDownVal = $(""#countryList,#countryListEdit option:selected"").val();
                    console.log(""changed clicked"" + "" | "" + userDropDownText + "" | "" + userDropDownVal)

                    GetProvinceList(userDropDownVal)

                })
            },
            error: function (errormessage) {
                alert(errormessage.responseText);
            }
        });
    }
    function SkillsList() {
        $.ajax({
            url: ""/Country/GetSkillsLists"",
            type: ""GET"",
            contentType: ""application/json;charset=utf-8"",
            dataType: ""json"",
            success: function (result) {
                console.log(""Check Boxes=> "", result)

                var checkbox = '';
                for (var i = 0; i < result.length; i++) {
                    checkbox += '<label class=""control-label check"">' + result[i].skil");
            WriteLiteral(@"lName + '<input class=""form-control"" type=""checkbox"" id=""' + result[i].skillId + '"" value=""' + result[i].skillId + '"" />' + '</label>&nbsp;';
                }


                $(""#checkboxeslist,#checkboxeslistEdit"").html(checkbox)


            },
            error: function (errormessage) {
                alert(errormessage.responseText);
            }
        });
    }
    function loadMasterData() {
        var loader = $("".lds-spinner"").show();
        $.ajax({
            url: ""/NewUser/GetMasterUsersLists"",
            type: ""GET"",
            contentType: ""application/json;charset=utf-8"",
            dataType: ""json"",
            success: function (result) {
                loader.hide();
                var html = '';
                //console.log(""result=> "", result)
                $.each(result, function (key, item) {
                    //console.log(""Item=> "",item)
                    html += '<tr>';
                    //html += '<td>' + item._userId + '</td>';
  ");
            WriteLiteral(@"                  html += '<td>' + item.userName + '</td>';
                    html += '<td>' + item.userEmail + '</td>';
                    html += '<td>' + item.userPhone + '</td>';
                    html += '<td>' + item.userPwd + '</td>';
                    html += '<td>' + item.countryName + '</td>';
                    html += '<td>' + item.provinceName + '</td>';
                    html += '<td><a href=""#"" onclick=""RcrdGetbyID(' + item.userId + ')"">Edit</a> | <a href=""/NewUser/InsertMaster"" onclick=""DeleleRecord(' + item.userId + ')"">Delete</a></td>';
                    html += '</tr>';
                });
                $('#tMasterbody').html(html);
            },
            error: function (errormessage) {
                alert(errormessage.responseText);
            }
        });
    }

    /***********************************************Delete Record**********************************************************/
    function DeleleRecord(id) {
        if (confirm(""Are you su");
            WriteLiteral(@"re you want to delete this rcrd??"")) {
            $.ajax({
                url: ""/NewUser/DeleteRecordbyID/"" + id,
                type: 'GET',
                contentType: ""application/json;charset=UTF-8"",
                dataType: ""json"",
                success: function (data) {
                    console.log(""Data Success=> "", data)
                    loadMasterData();
                },
                error: function (err) {
                    console.error(""Error=> "", err.responseText)
                }
            })
        }
    }

    /***********************************************Edit Record**********************************************************/
    function RcrdGetbyID(id) {
        formClear()
        $.ajax({
            url: '/NewUser/GetMasterbyId/' + id,
            contentType: ""application/json;charset=utf-8"",
            dataType: ""json"",
            type: 'GET',
            processData: false,
            success: function (result) {
                c");
            WriteLiteral(@"onsole.log(""Edit Result=> "", result)
                console.log(""User id=> "", result.userId)
                $(""#_userId"").val(result.userId);
                $(""#_uname"").val(result.userName);
                $(""#_email"").val(result.userEmail);
                $(""#_pwd"").val(result.userPwd);
                $(""#_phone"").val(result.userPhone);
                var countryId = parseInt(result.userCountry)
                //var provinceId = parseInt(result._userProvince)

                //map saved chkBoxes values
                var editchecklist = JSON.parse(result.uskillIds)
                console.log(""Chl Lst=> "",editchecklist)
                for (var i = 0; i < editchecklist.length; i++) {
                    $(""#checkboxeslistEdit input[value="" + editchecklist[i] + ""]"").attr(""checked"", true).val(editchecklist[i]);
                    console.log(""Check List=> "", editchecklist[i])

                }

                console.log(""countryId=> "", countryId)

                $(""#country");
            WriteLiteral(@"ListEdit option[value="" + countryId + ""]"").attr(""selected"", true).val(countryId)
                console.log(""val=> "", countryId)




                $(""#myModal"").modal(""show"")

            },
            error: function (err) {
                console.error(""Error=> "", err.responseText)
            }
        })

    }
    /***********************************************Update Record**********************************************************/

    $(""#btnUpdate"").click(function () {
        var uname = $(""#_uname"").val();
        var email = $(""#_email"").val();
        var pwd = $(""#_pwd"").val();
        var uid = $(""#_userId"").val()
        var phone = $(""#_phone"").val();
        var userDropDown = $(""#countryListEdit option:selected"").text();
        var userDropDownVal = $(""#countryListEdit option:selected"").val();
        console.log(""Update DropDown=> "" + userDropDown + "" | "" + ""Update userDropDownVal=> "", userDropDownVal)

        console.log(""UserId=> "" + uid)

        var ");
            WriteLiteral(@"data = new FormData;
        data.append(""userName"", uname)
        data.append(""userPwd"", pwd)
        data.append(""userEmail"", email)
        data.append(""userPhone"", phone)
        data.append(""userId"", uid)
        data.append(""userCountry"", userDropDownVal)


        //console.log(""After CLicking=> "", data.userId)

        $.ajax({
            url: ""/NewUser/GetMasterbyId/"" + uid,
            type: ""POST"",
            dataType: ""json"",
            data: data,
            processData: false,
            contentType: false,
            success: function (data) {
                console.log(""Success=> "", data)
                loadMasterData();
                $('#myModal').modal('hide');
                swal(""Data updated successfully"")
            },
            error: function (err) {
                console.error(""Error=> "", err.responseText)
            }
        }).done(function (result) {
            console.log(""Done=> "", result)
        }).fail(function (fail) {

     ");
            WriteLiteral(@"       console.log(""Fail=> "", fail)
        })
    })
    /***********************************************Insert Bulk Records**********************************************************/
    //global array
    let _data = new Array();
    $(""#btnSubmitt"").click(function (event) {
        event.preventDefault();
        var selected = new Array();
        let uname = $(""#uname"").val();
        let email = $(""#email"").val();
        let pwd = $(""#pwd"").val();
        let phone = $(""#phone"").val();
        var userDropDown = $(""#countryList option:selected"").text();
        var userDropDownVal = $(""#countryList option:selected"").val();

        //var provinceDropDownText = $(""#provinceList option:selected"").text();
        //var provinceDropDownVal = $(""#provinceList option:selected"").val();


        //get multiple check boxes values
        var checkbox = $(""#checkboxeslist input[type=checkbox]:checked"").each(function () {
            selected.push(this.value);
        });
        if (sel");
            WriteLiteral(@"ected.length > 0) {
            console.log(""Selected values: "" + selected.join("",""));
        }

        var html = ''
        html += '<tr>';
        html += '<td id=""userName"">' + uname + '</td>';
        html += '<td id=""userEmail"">' + email + '</td>';
        html += '<td id=""userPwd"">' + pwd + '</td>';
        html += '<td id=""userPhone"">' + phone + '</td>';
        html += '<td id=""userDropDown"">' + userDropDown + '</td>';
        html += '</tr>';

        $('.tbody').append(html);
        $(""#table_hover"").removeClass(""hidden"")



        formClear();
        $(""#uname"").focus()


        $('.tbody').each(function () {
            let pushedData = {}
            pushedData.userName = uname
            pushedData.userEmail = email
            pushedData.userPwd = pwd
            pushedData.userPhone = phone
            pushedData.userCountry = userDropDownVal
            pushedData.countryName = userDropDown
            pushedData.uskillIds = JSON.stringify(selected)

  ");
            WriteLiteral(@"          //pushedData._userProvince = provinceDropDownVal
            //pushedData._provinceName = provinceDropDownText

            console.log(""Inside table => "", pushedData.userName + "" | "" + pushedData.userEmail + "" | "" + pushedData.userPwd + "" | "" + pushedData.userPhone + "" | "" + pushedData.userCountry + "" | "" + pushedData.countryName + "" | "" + pushedData.uskillIds )
            console.log(""Pushed=> "", pushedData)
            _data.push(pushedData)
            swal(""Data pushed in queue."")
            console.log(""_data=> "", _data)


        });
    });

    function addInfo() {
        //alert(JSON.stringify(_data))
        //var filePath = $(""#InputImg"").get(0).files;


        var updated_data = $(""#data"").val(JSON.stringify(_data))
        console.log(""updated_data=> "", updated_data.val())

    }

    function formClear() {
        //Clear fields
        $(""#uname"").val("""");
        $(""#email"").val("""");
        $(""#pwd"").val("""");
        $(""#phone"").val("""");
        $(""");
            WriteLiteral(@"#countryList"").val(""-1"");
        $('#checkboxeslistEdit input:checkbox,#checkboxeslist input:checkbox').removeAttr('checked');
        //$(""#provinceList"").attr(""disabled"", ""disabled"").val(""-1"")
        //$(""#checkboxeslist"").remove();
    }

    /***********************************************ENd Insert Bulk Records**********************************************************/
</script>
");
            EndContext();
        }
        #pragma warning restore 1998
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.IModelExpressionProvider ModelExpressionProvider { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IUrlHelper Url { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IViewComponentHelper Component { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IJsonHelper Json { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper<UserLive.Models.NewUserVM> Html { get; private set; }
    }
}
#pragma warning restore 1591
